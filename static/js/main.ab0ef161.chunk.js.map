{"version":3,"sources":["assets/images/rock.png","assets/images/paper.png","assets/images/scissors.png","assets/images/lizard.png","assets/images/spock.png","components/Navbar.jsx","components/Scorecard.jsx","components/Form.jsx","charactersData.js","components/Showdown.jsx","App.js","reportWebVitals.js","index.js"],"names":["module","exports","__webpack_require__","p","Navbar","react_default","a","createElement","className","href","target","rel","Scorecard","_ref","score","react_dom_default","playerScore","computerScore","Form","handleChange","handleSubmit","onSubmit","type","id","name","value","onChange","htmlFor","characters","Showdown","playerCharacter","setScore","_useState","useState","_useState2","Object","slicedToArray","computerCharacter","setComputerCharacter","_useState3","_useState4","winnerText","setWinnerText","useEffect","Math","floor","random","length","objectSpread","concat","determineCharacter","characterName","rock","paper","scissors","lizard","spock","src","alt","react_router_dom","class","to","onClick","App","setPlayerCharacter","navigate","useNavigate","react","components_Navbar","components_Scorecard","react_router","path","element","components_Form","event","preventDefault","components_Showdown","reportWebVitals","onPerfEntry","Function","e","then","bind","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","src_App","document","getElementById"],"mappings":"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","file":"static/js/main.ab0ef161.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/rock.5914af84.png\";","module.exports = __webpack_public_path__ + \"static/media/paper.88761c90.png\";","module.exports = __webpack_public_path__ + \"static/media/scissors.265f976c.png\";","module.exports = __webpack_public_path__ + \"static/media/lizard.ccbef0d1.png\";","module.exports = __webpack_public_path__ + \"static/media/spock.7f99ffc5.png\";","import React from \"react\";\n\nconst Navbar = () => {\n  return (\n    <nav>\n      <h2 className=\"nav--title\">Rock Paper Scissors Lizard Spock</h2>\n      <a\n        className=\"nav--video__link\"\n        href=\"https://www.youtube.com/watch?v=x5Q6-wMx-K8\"\n        target=\"_blank\"\n        rel=\"noreferrer\"\n      >\n        <h2 className=\"nav--video__text\">See video</h2>\n      </a>\n    </nav>\n  );\n};\n\nexport default Navbar;\n","import React from \"react-dom\";\n\nconst Scorecard = ({ score }) => {\n  return (\n    <div className=\"scorecard--container\">\n      <div className=\"scorecard--player__container\">\n        <span className=\"scorecard--player__name\">[you]</span>\n        <h1 className=\"scorecard--player__score\">{score.playerScore}</h1>\n      </div>\n\n      <h1 className=\"scorecard--separator\">:</h1>\n      <div className=\"scorecard--computer__container\">\n        <h1 className=\"scorecard--computer__score\">{score.computerScore}</h1>\n        <span className=\"scorecard--computer__name\">[computer]</span>\n      </div>\n    </div>\n  );\n};\n\nexport default Scorecard;\n","import React from \"react\";\n\nconst Form = ({ handleChange, handleSubmit }) => {\n  return (\n    <form onSubmit={handleSubmit}>\n      <div className=\"form--radio__container\">\n        <div className=\"form--radio__item\">\n          <input\n            type=\"radio\"\n            id=\"rock\"\n            name=\"character\"\n            value=\"rock\"\n            onChange={handleChange}\n          />\n          <label htmlFor=\"rock\">Rock</label>\n        </div>\n        <div className=\"form--radio__item\">\n          <input\n            type=\"radio\"\n            id=\"paper\"\n            name=\"character\"\n            value=\"paper\"\n            onChange={handleChange}\n          />\n          <label htmlFor=\"paper\">Paper</label>\n        </div>\n        <div className=\"form--radio__item\">\n          <input\n            type=\"radio\"\n            id=\"scissors\"\n            name=\"character\"\n            value=\"scissors\"\n            onChange={handleChange}\n          />\n          <label htmlFor=\"scissors\">Scissors</label>\n        </div>\n        <div className=\"form--radio__item\">\n          <input\n            type=\"radio\"\n            id=\"lizard\"\n            name=\"character\"\n            value=\"lizard\"\n            onChange={handleChange}\n          />\n          <label htmlFor=\"lizard\">Lizard</label>\n        </div>\n        <div className=\"form--radio__item\">\n          <input\n            type=\"radio\"\n            id=\"spock\"\n            name=\"character\"\n            value=\"spock\"\n            onChange={handleChange}\n          />\n          <label htmlFor=\"spock\">Spock</label>\n        </div>\n      </div>\n      <button className=\"form--submit\">Play</button>\n    </form>\n  );\n};\n\nexport default Form;\n","const characters = [\"rock\", \"paper\", \"scissors\", \"lizard\", \"spock\"];\n\nexport default characters;\n","import React, { useEffect, useState } from \"react\";\nimport rock from \"../assets/images/rock.png\";\nimport paper from \"../assets/images/paper.png\";\nimport scissors from \"../assets/images/scissors.png\";\nimport lizard from \"../assets/images/lizard.png\";\nimport spock from \"../assets/images/spock.png\";\nimport characters from \"../charactersData\";\nimport { Link } from \"react-router-dom\";\n\nconst Showdown = ({ playerCharacter, score, setScore }) => {\n  // const messages = {\n  //   \"lizard-paper\": \"Lizard eats Paper\",\n  //   \"lizard-rock\": \"Rock crushes Lizard\",\n  //   \"lizard-scissors\": \"Scissors decapitates Lizard\",\n  //   \"lizard-spock\": \"Lizard poisons Spock\",\n\n  //   \"paper-rock\": \"Paper covers Rock\",\n  //   \"paper-scissors\": \"Scissors cuts Paper\",\n  //   \"paper-spock\": \"Paper disproves Spock\",\n\n  //   \"rock-scissors\": \"Rock crushes Scissors\",\n  //   \"rock-spock\": \"Spock vaporizes Rock\",\n\n  //   \"scissors-spock\": \"Spock smashes Scissors\",\n  // };\n\n  const [computerCharacter, setComputerCharacter] = useState(\"\");\n  const [winnerText, setWinnerText] = useState(\"\");\n  const generateMoveForComputer = () => {\n    setComputerCharacter(\n      characters[Math.floor(Math.random() * characters.length)]\n    );\n  };\n  useEffect(() => {\n    generateMoveForComputer();\n  }, []);\n\n  const getWinnerText = () => {\n    if (playerCharacter === computerCharacter) {\n      setScore({ ...score });\n      setWinnerText(`${playerCharacter} ties ${computerCharacter}`);\n    } else if (playerCharacter === \"lizard\") {\n      if (computerCharacter === \"paper\") {\n        setScore({ ...score, playerScore: score.playerScore + 1 });\n        setWinnerText(\"Lizard eats Paper\");\n      } else if (computerCharacter === \"spock\") {\n        setScore({ ...score, playerScore: score.playerScore + 1 });\n        setWinnerText(\"Lizard poisons Spock\");\n      } else if (computerCharacter === \"rock\") {\n        setScore({ ...score, computerScore: score.computerScore + 1 });\n        setWinnerText(\"Rock crushes Lizard\");\n      } else if (computerCharacter === \"scissors\") {\n        setScore({ ...score, computerScore: score.computerScore + 1 });\n        setWinnerText(\"Scissors decapitates Lizard\");\n      }\n    } else if (playerCharacter === \"paper\") {\n      if (computerCharacter === \"rock\") {\n        setScore({ ...score, playerScore: score.playerScore + 1 });\n        setWinnerText(\"Paper covers Rock\");\n      } else if (computerCharacter === \"spock\") {\n        setScore({ ...score, playerScore: score.playerScore + 1 });\n        setWinnerText(\"Paper disproves Spock\");\n      } else if (computerCharacter === \"scissors\") {\n        setScore({ ...score, computerScore: score.computerScore + 1 });\n        setWinnerText(\"Scissors cuts Paper\");\n      } else if (computerCharacter === \"lizard\") {\n        setScore({ ...score, computerScore: score.computerScore + 1 });\n        setWinnerText(\"Lizard eats Paper\");\n      }\n    } else if (playerCharacter === \"rock\") {\n      if (computerCharacter === \"scissors\") {\n        setScore({ ...score, playerScore: score.playerScore + 1 });\n        setWinnerText(\"Rock crushes Scissors\");\n      } else if (computerCharacter === \"lizard\") {\n        setScore({ ...score, playerScore: score.playerScore + 1 });\n        setWinnerText(\"Rock crushes Lizard\");\n      } else if (computerCharacter === \"paper\") {\n        setScore({ ...score, computerScore: score.computerScore + 1 });\n        setWinnerText(\"Paper covers Rock\");\n      } else if (computerCharacter === \"spock\") {\n        setScore({ ...score, computerScore: score.computerScore + 1 });\n        setWinnerText(\"Spock vaporizes Rock\");\n      }\n    } else if (playerCharacter === \"scissors\") {\n      if (computerCharacter === \"paper\") {\n        setScore({ ...score, playerScore: score.playerScore + 1 });\n        setWinnerText(\"Scissors cuts Paper\");\n      } else if (computerCharacter === \"lizard\") {\n        setScore({ ...score, playerScore: score.playerScore + 1 });\n        setWinnerText(\"Scissors decapitates Lizard\");\n      } else if (computerCharacter === \"rock\") {\n        setScore({ ...score, computerScore: score.computerScore + 1 });\n        setWinnerText(\"Rock crushes Scissors\");\n      } else if (computerCharacter === \"spock\") {\n        setScore({ ...score, computerScore: score.computerScore + 1 });\n        setWinnerText(\"Spock smashes Scissors\");\n      }\n    } else if (playerCharacter === \"spock\") {\n      if (computerCharacter === \"rock\") {\n        setScore({ ...score, playerScore: score.playerScore + 1 });\n        setWinnerText(\"Spock vaporizes Rock\");\n      } else if (computerCharacter === \"scissors\") {\n        setScore({ ...score, playerScore: score.playerScore + 1 });\n        setWinnerText(\"Spock smashes Scissors\");\n      } else if (computerCharacter === \"paper\") {\n        setScore({ ...score, computerScore: score.computerScore + 1 });\n        setWinnerText(\"Paper disproves Spock\");\n      } else if (computerCharacter === \"lizard\") {\n        setScore({ ...score, computerScore: score.computerScore + 1 });\n        setWinnerText(\"Lizard poisons Spock\");\n      }\n    }\n  };\n\n  useEffect(() => {\n    getWinnerText();\n  }, [computerCharacter]);\n\n  const determineCharacter = (characterName) => {\n    if (characterName === \"rock\") {\n      return rock;\n    }\n    if (characterName === \"paper\") {\n      return paper;\n    }\n    if (characterName === \"scissors\") {\n      return scissors;\n    }\n    if (characterName === \"lizard\") {\n      return lizard;\n    }\n    if (characterName === \"spock\") {\n      return spock;\n    }\n  };\n\n  return (\n    <div className=\"showdown--container--button\">\n      <div className=\"showdown--container\">\n        <img\n          className=\"showdown--img\"\n          src={determineCharacter(playerCharacter)}\n          alt={playerCharacter}\n        />\n        <h1 className=\"showdown--text\">{winnerText}</h1>\n        <img\n          className=\"showdown--img\"\n          src={determineCharacter(computerCharacter)}\n          alt={computerCharacter}\n        />\n      </div>\n      <Link\n        class=\"play-again-btn\"\n        to=\"/\"\n        onClick={() => setComputerCharacter(\"\")}\n      >\n        Play Again\n      </Link>\n    </div>\n  );\n};\n\nexport default Showdown;\n","import \"./style.css\";\nimport Navbar from \"./components/Navbar\";\nimport Scorecard from \"./components/Scorecard\";\nimport Form from \"./components/Form\";\nimport Showdown from \"./components/Showdown\";\nimport { React, useState } from \"react\";\nimport { Routes, Route, useNavigate } from \"react-router-dom\";\n\nconst App = () => {\n  const [playerCharacter, setPlayerCharacter] = useState(\"\");\n  const navigate = useNavigate();\n\n  const [score, setScore] = useState({\n    playerScore: 0,\n    computerScore: 0,\n  });\n\n  const handleChange = (event) => {\n    setPlayerCharacter(event.target.value);\n  };\n\n  const handleSubmit = (event) => {\n    event.preventDefault();\n    navigate(\"/showdown\");\n  };\n\n  return (\n    <div className=\"App\">\n      <Navbar />\n      <div className=\"content\">\n        <Scorecard score={score} />\n        <Routes>\n          <Route\n            path=\"/\"\n            element={\n              <Form handleChange={handleChange} handleSubmit={handleSubmit} />\n            }\n          ></Route>\n          <Route\n            path=\"/showdown\"\n            element={\n              <Showdown\n                playerCharacter={playerCharacter}\n                score={score}\n                setScore={setScore}\n              />\n            }\n          ></Route>\n        </Routes>\n      </div>\n    </div>\n  );\n};\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport { BrowserRouter as Router } from \"react-router-dom\";\n\nReactDOM.render(\n  <Router>\n    <App />\n  </Router>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}